


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; (c) Mike Brady, 2011 -- 2019.
    5 00000000         
    6 00000000                 EXPORT           start
    7 00000000                 IMPORT           ReadKeyPress ;Import subroutine
                                                             to read keys
    8 00000000                 IMPORT           IO1DIR
    9 00000000                 IMPORT           IO1CLR
   10 00000000                 IMPORT           IO1SET
   11 00000000                 IMPORT           Display
   12 00000000         
   13 00000000         ;Main loop
   14 00000000         start
   15 00000000         ;val in R5 = value to display
   16 00000000         
   17 00000000 E3A05000        LDR              R5, =0
   18 00000004 E59F1130        LDR              R1, =IO1DIR
   19 00000008 E5912000        LDR              R2, [R1]
   20 0000000C E382280F        ORR              R2, #(2_1111 << 16)
   21 00000010 E5812000        STR              R2, [R1]
   22 00000014 E59F1124        LDR              R1, =IO1SET
   23 00000018 E3A0480F        LDR              R4, =(2_1111 << 16)
   24 0000001C E5814000        STR              R4, [R1]
   25 00000020         
   26 00000020         
   27 00000020 E3A07000        MOV              R7, #0      ;Initialising stack
                                                             counter (doesn't i
                                                            nclude itself)
   28 00000024 E59FC118        LDR              R12, =STK_TOP ;Initialising sta
                                                            ck pointer
   29 00000028 E52C7004        STR              R7, [R12, #-4]! ;Adding stack c
                                                            ounter to top of st
                                                            ack
   30 0000002C         
   31 0000002C         
   32 0000002C         
   33 0000002C         LPST
   34 0000002C E3A02000        LDR              R2, =0
   35 00000030         
   36 00000030         
   37 00000030 EBFFFFFE        BL               ReadKeyPress ;Set R0 to +-{20-2
                                                            3}
   38 00000034         
   39 00000034         ;Switch statement for button presses
   40 00000034 E3500014        CMP              R0, #20
   41 00000038 0A00000D        BEQ              CASE1
   42 0000003C E3700014        CMP              R0, #-20
   43 00000040 0A00002C        BEQ              DEFAULT
   44 00000044 E3500015        CMP              R0, #21
   45 00000048 0A00000C        BEQ              CASE2
   46 0000004C E3700015        CMP              R0, #-21
   47 00000050 0A000028        BEQ              DEFAULT
   48 00000054 E3500016        CMP              R0, #22
   49 00000058 0A00000B        BEQ              CASE3
   50 0000005C E3700016        CMP              R0, #-22
   51 00000060 0A000013        BEQ              CASE3L
   52 00000064 E3500017        CMP              R0, #23



ARM Macro Assembler    Page 2 


   53 00000068 0A000007        BEQ              CASE3
   54 0000006C E3700017        CMP              R0, #-23
   55 00000070 0A000017        BEQ              CASE4L
   56 00000074         
   57 00000074         CASE1
   58 00000074 E2855201        ADD              R5, R5, #(2_1 << 28)
   59 00000078 E1A03E25        LSR              R3, R5, #28
   60 0000007C EA00002B        B                SwitchEnd
   61 00000080         
   62 00000080         
   63 00000080         CASE2
   64 00000080 E2455201        SUB              R5, R5, #(2_1 << 28)
   65 00000084 E1A03E25        LSR              R3, R5, #28
   66 00000088 EA000028        B                SwitchEnd
   67 0000008C         
   68 0000008C         
   69 0000008C         CASE3
   70 0000008C E49C7004        LDR              R7, [R12], #4 ;Pop stack counte
                                                            r from stack
   71 00000090 E3570002        CMP              R7, #2
   72 00000094 AA000018        BGE              OPERATE     ;Check if there is 
                                                            a number and an ope
                                                            rator in the stack
   73 00000098 E2877002        ADD              R7, #2      ;Increment stack co
                                                            unter
   74 0000009C E52C5004        STR              R5, [R12, #-4]! 
                                                            ;Push R5 onto stack
                                                            
   75 000000A0 E52C0004        STR              R0, [R12, #-4]! ;Push operation
                                                             onto stack
   76 000000A4 E1A03E25        LSR              R3, R5, #28 ;Store for display
   77 000000A8 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   78 000000AC E3A05000        MOV              R5, #0      ;Reset R5
   79 000000B0 EA00001E        B                SwitchEnd   ;Display Result
   80 000000B4         
   81 000000B4         
   82 000000B4         CASE3L
   83 000000B4 E92D0004        STMFD            sp!, {R2}   ;Store previous val
                                                            ues
   84 000000B8 E3A07000        MOV              R7, #0      ;Zero stack counter
                                                            
   85 000000BC E49C2004        LDR              R2, [R12], #4 ;Pop operator fro
                                                            m stack
   86 000000C0 E49C5004        LDR              R5, [R12], #4 ;Pop num1 from st
                                                            ack
   87 000000C4 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   88 000000C8 E1A03E25        LSR              R3, R5, #28 ;Store for display
   89 000000CC E8BD0004        LDMFD            sp!, {R2}   ;Restore to previou
                                                            s values
   90 000000D0 EA000016        B                SwitchEnd   ;Display Result
   91 000000D4         
   92 000000D4         CASE4L
   93 000000D4 E92D0004        STMFD            sp!, {R2}   ;Store previous val
                                                            ues
   94 000000D8 E3A07000        MOV              R7, #0      ;Zero stack counter
                                                            
   95 000000DC E49C2004        LDR              R2, [R12], #4 ;Pop operator fro



ARM Macro Assembler    Page 3 


                                                            m stack
   96 000000E0 E49C5004        LDR              R5, [R12], #4 ;Pop num1 from st
                                                            ack
   97 000000E4 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   98 000000E8 E3A03000        MOV              R3, #0      ;Zero display
   99 000000EC E3A05000        MOV              R5, #0      ;Zero number storag
                                                            e
  100 000000F0 E8BD0004        LDMFD            sp!, {R2}   ;Restore to previou
                                                            s values
  101 000000F4 EA00000D        B                SwitchEnd   ;Branch with Displa
                                                            y 0
  102 000000F8         
  103 000000F8         
  104 000000F8         DEFAULT
  105 000000F8         ;LDR R3, =2_1111
  106 000000F8 EA00000C        B                SwitchEnd
  107 000000FC         
  108 000000FC         
  109 000000FC         OPERATE
  110 000000FC E92D0016        STMFD            sp!, {R1,R2,R4} ;Store previous
                                                             values
  111 00000100 E2477001        SUB              R7, #1      ;Decrement stack co
                                                            unter
  112 00000104 E49C4004        LDR              R4, [R12], #4 ;Pop operator fro
                                                            m stack
  113 00000108 E49C2004        LDR              R2, [R12], #4 ;Pop num1 from st
                                                            ack
  114 0000010C E3540016        CMP              R4, #22
  115 00000110 00825005        ADDEQ            R5, R2, R5  ;Add num1 & num2
  116 00000114 10425005        SUBNE            R5, R2, R5  ;Subtract num1 & nu
                                                            m2
  117 00000118 E52C5004        STR              R5, [R12, #-4]! ;Store output
  118 0000011C E1A03E25        LSR              R3, R5, #28 ;Store for display
  119 00000120 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
  120 00000124 E3A05000        MOV              R5, #0      ;Reset R5
  121 00000128 E8BD0016        LDMFD            sp!, {R1,R2,R4} ;Restore to pre
                                                            vious values
  122 0000012C EAFFFFFF        B                SwitchEnd
  123 00000130         
  124 00000130         
  125 00000130         
  126 00000130         
  127 00000130         
  128 00000130         SwitchEnd
  129 00000130         
  130 00000130         ;Display to LEDs
  131 00000130         
  132 00000130 E1A01003        MOV              R1, R3
  133 00000134         
  134 00000134 EBFFFFFE        BL               Display
  135 00000138         
  136 00000138         ;TST R3, #2_1000
  137 00000138         ;ORRNE R2, #2_0001
  138 00000138         ;TST R3, #2_0100
  139 00000138         ;ORRNE R2, #2_0010
  140 00000138         ;TST R3, #2_0010
  141 00000138         ;ORRNE R2, #2_0100



ARM Macro Assembler    Page 4 


  142 00000138         ;TST R3, #2_0001
  143 00000138         ;ORRNE R2, #2_1000
  144 00000138         ;LDR R1, =IO1SET
  145 00000138         ;LDR R4, =(2_1111 << 16)
  146 00000138         ;STR R4, [R1]
  147 00000138         ;LDR R1, =IO1CLR
  148 00000138         ;LSL R2, #16
  149 00000138         ;STR R2, [R1]
  150 00000138         
  151 00000138         
  152 00000138 EAFFFFBB        B                LPST
  153 0000013C         
  154 0000013C         
  155 0000013C 00000000 
              00000000 
              00000000         AREA             STK, CODE, READWRITE
  156 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       STK_TOP SPACE            256
  157 00000100         
  158 00000100                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
CASE1 00000074

Symbol: CASE1
   Definitions
      At line 57 in file App.s
   Uses
      At line 41 in file App.s
Comment: CASE1 used once
CASE2 00000080

Symbol: CASE2
   Definitions
      At line 63 in file App.s
   Uses
      At line 45 in file App.s
Comment: CASE2 used once
CASE3 0000008C

Symbol: CASE3
   Definitions
      At line 69 in file App.s
   Uses
      At line 49 in file App.s
      At line 53 in file App.s

CASE3L 000000B4

Symbol: CASE3L
   Definitions
      At line 82 in file App.s
   Uses
      At line 51 in file App.s
Comment: CASE3L used once
CASE4L 000000D4

Symbol: CASE4L
   Definitions
      At line 92 in file App.s
   Uses
      At line 55 in file App.s
Comment: CASE4L used once
DEFAULT 000000F8

Symbol: DEFAULT
   Definitions
      At line 104 in file App.s
   Uses
      At line 43 in file App.s
      At line 47 in file App.s

LPST 0000002C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: LPST
   Definitions
      At line 33 in file App.s
   Uses
      At line 152 in file App.s
Comment: LPST used once
OPERATE 000000FC

Symbol: OPERATE
   Definitions
      At line 109 in file App.s
   Uses
      At line 72 in file App.s
Comment: OPERATE used once
SwitchEnd 00000130

Symbol: SwitchEnd
   Definitions
      At line 128 in file App.s
   Uses
      At line 60 in file App.s
      At line 66 in file App.s
      At line 79 in file App.s
      At line 90 in file App.s
      At line 101 in file App.s
      At line 106 in file App.s
      At line 122 in file App.s

start 00000000

Symbol: start
   Definitions
      At line 14 in file App.s
   Uses
      At line 6 in file App.s
Comment: start used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STK 00000000

Symbol: STK
   Definitions
      At line 155 in file App.s
   Uses
      None
Comment: STK unused
STK_TOP 00000000

Symbol: STK_TOP
   Definitions
      At line 156 in file App.s
   Uses
      At line 28 in file App.s
Comment: STK_TOP used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display 00000000

Symbol: Display
   Definitions
      At line 11 in file App.s
   Uses
      At line 134 in file App.s
Comment: Display used once
IO1CLR 00000000

Symbol: IO1CLR
   Definitions
      At line 9 in file App.s
   Uses
      None
Comment: IO1CLR unused
IO1DIR 00000000

Symbol: IO1DIR
   Definitions
      At line 8 in file App.s
   Uses
      At line 18 in file App.s
Comment: IO1DIR used once
IO1SET 00000000

Symbol: IO1SET
   Definitions
      At line 10 in file App.s
   Uses
      At line 22 in file App.s
Comment: IO1SET used once
ReadKeyPress 00000000

Symbol: ReadKeyPress
   Definitions
      At line 7 in file App.s
   Uses
      At line 37 in file App.s
Comment: ReadKeyPress used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
6 symbols
354 symbols in table
