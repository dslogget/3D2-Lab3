


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; (c) Mike Brady, 2011 -- 2019.
    5 00000000         
    6 00000000                 EXPORT           start
    7 00000000                 IMPORT           ReadKeyPress ;Import subroutine
                                                             to read keys
    8 00000000                 IMPORT           IO1DIR
    9 00000000                 IMPORT           IO1CLR
   10 00000000                 IMPORT           IO1SET
   11 00000000                 IMPORT           Display
   12 00000000         
   13 00000000         ;Main loop
   14 00000000         start
   15 00000000         ;val in R5 = value to display
   16 00000000         
   17 00000000 E3A03000        LDR              R3, =0
   18 00000004 E3A05000        LDR              R5, =0
   19 00000008 E59F1154        LDR              R1, =IO1DIR
   20 0000000C E5912000        LDR              R2, [R1]
   21 00000010 E382280F        ORR              R2, #(2_1111 << 16)
   22 00000014 E5812000        STR              R2, [R1]
   23 00000018 E59F1148        LDR              R1, =IO1SET
   24 0000001C E3A0480F        LDR              R4, =(2_1111 << 16)
   25 00000020 E5814000        STR              R4, [R1]
   26 00000024         
   27 00000024         
   28 00000024 E3A07000        MOV              R7, #0      ;Initialising stack
                                                             counter (doesn't i
                                                            nclude itself)
   29 00000028         
   30 00000028 E59FC13C        LDR              R12, =STK_TOP ;Initialising sta
                                                            ck pointer
   31 0000002C E52C7004        STR              R7, [R12, #-4]! ;Adding stack c
                                                            ounter to top of st
                                                            ack
   32 00000030         
   33 00000030         
   34 00000030         
   35 00000030         LPST
   36 00000030 E3A02000        LDR              R2, =0
   37 00000034         
   38 00000034         
   39 00000034 EBFFFFFE        BL               ReadKeyPress ;Set R0 to +-{20-2
                                                            3}
   40 00000038         
   41 00000038         ;Switch statement for button presses
   42 00000038 E3500014        CMP              R0, #20
   43 0000003C 0A00000D        BEQ              CASE1
   44 00000040 E3700014        CMP              R0, #-20
   45 00000044 0A00002D        BEQ              DEFAULT
   46 00000048 E3500015        CMP              R0, #21
   47 0000004C 0A00000C        BEQ              CASE2
   48 00000050 E3700015        CMP              R0, #-21
   49 00000054 0A000029        BEQ              DEFAULT
   50 00000058 E3500016        CMP              R0, #22
   51 0000005C 0A00000B        BEQ              CASE3
   52 00000060 E3700016        CMP              R0, #-22



ARM Macro Assembler    Page 2 


   53 00000064 0A000013        BEQ              CASE3L
   54 00000068 E3500017        CMP              R0, #23
   55 0000006C 0A000007        BEQ              CASE3
   56 00000070 E3700017        CMP              R0, #-23
   57 00000074 0A000018        BEQ              CASE4L
   58 00000078         
   59 00000078         CASE1
   60 00000078 E2855201        ADD              R5, R5, #(2_1 << 28)
   61 0000007C E1A03E25        LSR              R3, R5, #28
   62 00000080 EA000034        B                SwitchEnd
   63 00000084         
   64 00000084         
   65 00000084         CASE2
   66 00000084 E2455201        SUB              R5, R5, #(2_1 << 28)
   67 00000088 E1A03E25        LSR              R3, R5, #28
   68 0000008C EA000031        B                SwitchEnd
   69 00000090         
   70 00000090         
   71 00000090         CASE3
   72 00000090 E49C7004        LDR              R7, [R12], #4 ;Pop stack counte
                                                            r from stack
   73 00000094 E3570002        CMP              R7, #2
   74 00000098 AA000019        BGE              OPERATE     ;Check if there is 
                                                            a number and an ope
                                                            rator in the stack
   75 0000009C E2877002        ADD              R7, #2      ;Increment stack co
                                                            unter
   76 000000A0 E52C5004        STR              R5, [R12, #-4]! 
                                                            ;Push R5 onto stack
                                                            
   77 000000A4 E52C0004        STR              R0, [R12, #-4]! ;Push operation
                                                             onto stack
   78 000000A8 E1A03E25        LSR              R3, R5, #28 ;Store for display
   79 000000AC E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   80 000000B0 E3A05000        MOV              R5, #0      ;Reset R5
   81 000000B4 EA000027        B                SwitchEnd   ;Display Result
   82 000000B8         
   83 000000B8         
   84 000000B8         CASE3L
   85 000000B8         
   86 000000B8 E3A07000        MOV              R7, #0      ;Zero stack counter
                                                            
   87 000000BC E49C5004        LDR              R5, [R12], #4 ;Pop operator fro
                                                            m stack
   88 000000C0 E49C5004        LDR              R5, [R12], #4 ;Pop num1 from st
                                                            ack
   89 000000C4 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
   90 000000C8 E1A03E25        LSR              R3, R5, #28 ;Store for display
   91 000000CC E1A01003        MOV              R1, R3      ;Set to display out
                                                            put
   92 000000D0 EBFFFFFE        BL               Display
   93 000000D4 EBFFFFFE        BL               ReadKeyPress ;Get new operator
   94 000000D8 EAFFFFEC        B                CASE3       ;After input is rec
                                                            eived go to operati
                                                            on function
   95 000000DC         
   96 000000DC         CASE4L



ARM Macro Assembler    Page 3 


   97 000000DC E92D0004        STMFD            sp!, {R2}   ;Store previous val
                                                            ues
   98 000000E0 E3A07000        MOV              R7, #0      ;Zero stack counter
                                                            
   99 000000E4 E49C2004        LDR              R2, [R12], #4 ;Pop operator fro
                                                            m stack
  100 000000E8 E49C5004        LDR              R5, [R12], #4 ;Pop num1 from st
                                                            ack
  101 000000EC E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
  102 000000F0 E3A03000        MOV              R3, #0      ;Zero display
  103 000000F4 E3A05000        MOV              R5, #0      ;Zero number storag
                                                            e
  104 000000F8 E8BD0004        LDMFD            sp!, {R2}   ;Restore to previou
                                                            s values
  105 000000FC EA000015        B                SwitchEnd   ;Branch with Displa
                                                            y 0
  106 00000100         
  107 00000100         
  108 00000100         DEFAULT
  109 00000100         ;LDR R3, =2_1111
  110 00000100 EA000014        B                SwitchEnd
  111 00000104         
  112 00000104         
  113 00000104         OPERATE
  114 00000104 E92D0016        STMFD            sp!, {R1,R2,R4} ;Store previous
                                                             values
  115 00000108 E2477001        SUB              R7, #1      ;Decrement stack co
                                                            unter
  116 0000010C E49C4004        LDR              R4, [R12], #4 ;Pop operator fro
                                                            m stack
  117 00000110 E49C2004        LDR              R2, [R12], #4 ;Pop num1 from st
                                                            ack
  118 00000114 E3540016        CMP              R4, #22
  119 00000118 00825005        ADDEQ            R5, R2, R5  ;Add num1 & num2
  120 0000011C 10425005        SUBNE            R5, R2, R5  ;Subtract num1 & nu
                                                            m2
  121 00000120 E52C5004        STR              R5, [R12, #-4]! ;Store output
  122 00000124 E1A03E25        LSR              R3, R5, #28 ;Store for display
  123 00000128 E52C7004        STR              R7, [R12, #-4]! ;Store stack co
                                                            unter
  124 0000012C         ;MOV R5, #0       ;Reset R5
  125 0000012C E3A00000        MOV              R0, #0      ;Reset R0
  126 00000130         
  127 00000130 E1A01003        MOV              R1, R3      ;Set to display out
                                                            put
  128 00000134 EBFFFFFE        BL               Display
  129 00000138         
  130 00000138         OPERATELOOP                          ;Loop until 20/21 i
                                                            s pressed
  131 00000138 EBFFFFFE        BL               ReadKeyPress ;Set R0 to +-{20-2
                                                            3}
  132 0000013C E3500014        CMP              R0, #20
  133 00000140 0A000002        BEQ              OPERATEOUT  ;Check if input = 2
                                                            0
  134 00000144 E3500015        CMP              R0, #21
  135 00000148 0A000000        BEQ              OPERATEOUT  ;Check if input = 2
                                                            1
  136 0000014C EAFFFFF9        B                OPERATELOOP ;Else try again



ARM Macro Assembler    Page 4 


  137 00000150         OPERATEOUT
  138 00000150 E8BD0016        LDMFD            sp!, {R1,R2,R4} ;Restore to pre
                                                            vious values
  139 00000154 EAFFFFFF        B                SwitchEnd
  140 00000158         
  141 00000158         
  142 00000158         
  143 00000158         
  144 00000158         
  145 00000158         SwitchEnd
  146 00000158         
  147 00000158         ;Display to LEDs
  148 00000158         
  149 00000158 E1A01003        MOV              R1, R3
  150 0000015C         
  151 0000015C EBFFFFFE        BL               Display
  152 00000160         
  153 00000160         
  154 00000160 EAFFFFB2        B                LPST
  155 00000164         
  156 00000164         
  157 00000164 00000000 
              00000000 
              00000000         AREA             STK, CODE, READWRITE
  158 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    STK_BTM SPACE            254
  159 000000FE 00      STK_TOP DCB              0
  160 000000FF         
  161 000000FF                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
CASE1 00000078

Symbol: CASE1
   Definitions
      At line 59 in file App.s
   Uses
      At line 43 in file App.s
Comment: CASE1 used once
CASE2 00000084

Symbol: CASE2
   Definitions
      At line 65 in file App.s
   Uses
      At line 47 in file App.s
Comment: CASE2 used once
CASE3 00000090

Symbol: CASE3
   Definitions
      At line 71 in file App.s
   Uses
      At line 51 in file App.s
      At line 55 in file App.s
      At line 94 in file App.s

CASE3L 000000B8

Symbol: CASE3L
   Definitions
      At line 84 in file App.s
   Uses
      At line 53 in file App.s
Comment: CASE3L used once
CASE4L 000000DC

Symbol: CASE4L
   Definitions
      At line 96 in file App.s
   Uses
      At line 57 in file App.s
Comment: CASE4L used once
DEFAULT 00000100

Symbol: DEFAULT
   Definitions
      At line 108 in file App.s
   Uses
      At line 45 in file App.s
      At line 49 in file App.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

LPST 00000030

Symbol: LPST
   Definitions
      At line 35 in file App.s
   Uses
      At line 154 in file App.s
Comment: LPST used once
OPERATE 00000104

Symbol: OPERATE
   Definitions
      At line 113 in file App.s
   Uses
      At line 74 in file App.s
Comment: OPERATE used once
OPERATELOOP 00000138

Symbol: OPERATELOOP
   Definitions
      At line 130 in file App.s
   Uses
      At line 136 in file App.s
Comment: OPERATELOOP used once
OPERATEOUT 00000150

Symbol: OPERATEOUT
   Definitions
      At line 137 in file App.s
   Uses
      At line 133 in file App.s
      At line 135 in file App.s

SwitchEnd 00000158

Symbol: SwitchEnd
   Definitions
      At line 145 in file App.s
   Uses
      At line 62 in file App.s
      At line 68 in file App.s
      At line 81 in file App.s
      At line 105 in file App.s
      At line 110 in file App.s
      At line 139 in file App.s

start 00000000

Symbol: start
   Definitions
      At line 14 in file App.s
   Uses
      At line 6 in file App.s
Comment: start used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STK 00000000

Symbol: STK
   Definitions
      At line 157 in file App.s
   Uses
      None
Comment: STK unused
STK_BTM 00000000

Symbol: STK_BTM
   Definitions
      At line 158 in file App.s
   Uses
      None
Comment: STK_BTM unused
STK_TOP 000000FE

Symbol: STK_TOP
   Definitions
      At line 159 in file App.s
   Uses
      At line 30 in file App.s
Comment: STK_TOP used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display 00000000

Symbol: Display
   Definitions
      At line 11 in file App.s
   Uses
      At line 92 in file App.s
      At line 128 in file App.s
      At line 151 in file App.s

IO1CLR 00000000

Symbol: IO1CLR
   Definitions
      At line 9 in file App.s
   Uses
      None
Comment: IO1CLR unused
IO1DIR 00000000

Symbol: IO1DIR
   Definitions
      At line 8 in file App.s
   Uses
      At line 19 in file App.s
Comment: IO1DIR used once
IO1SET 00000000

Symbol: IO1SET
   Definitions
      At line 10 in file App.s
   Uses
      At line 23 in file App.s
Comment: IO1SET used once
ReadKeyPress 00000000

Symbol: ReadKeyPress
   Definitions
      At line 7 in file App.s
   Uses
      At line 39 in file App.s
      At line 93 in file App.s
      At line 131 in file App.s

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
6 symbols
357 symbols in table
