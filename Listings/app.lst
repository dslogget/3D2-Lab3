


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; (c) Mike Brady, 2011 -- 2019.
    5 00000000         
    6 00000000                 EXPORT           start
    7 00000000                 IMPORT           ReadKeyPress ;Import subroutine
                                                             to read keys
    8 00000000                 IMPORT           IO1DIR
    9 00000000                 IMPORT           IO1CLR
   10 00000000                 IMPORT           IO1SET
   11 00000000                 IMPORT           Display
   12 00000000         
   13 00000000         ;Main loop
   14 00000000         start
   15 00000000         ;;val in R5 = value to display
   16 00000000         
   17 00000000         ;LDR R5, =0
   18 00000000         ;LDR R1, =IO1DIR
   19 00000000         ;LDR R2, [R1]
   20 00000000         ;ORR R2, #(2_1111 << 16) 
   21 00000000         ;STR R2, [R1]
   22 00000000         ;LDR R1, =IO1SET
   23 00000000         ;LDR R4, =(2_1111 << 16)
   24 00000000         ;STR R4, [R1]
   25 00000000         
   26 00000000         
   27 00000000         ;MOV R7, #0       ;Initialising stack counter (doesn't i
                       nclude itself)
   28 00000000         ;LDR R12, =0xA1002400    ;Initialising stack pointer
   29 00000000         ;STR R7, [R12, #-4]!     ;Adding stack counter to top of
                        stack
   30 00000000         
   31 00000000         
   32 00000000         
   33 00000000         LPST
   34 00000000         ;LDR R2, =0
   35 00000000         
   36 00000000         
   37 00000000         ;BL ReadKeyPress      ;Set R0 to +-{20-23}
   38 00000000         
   39 00000000         ;;Switch statement for button presses
   40 00000000         ;CMP R0, #20
   41 00000000         ;BEQ CASE1
   42 00000000         ;CMP R0, #-20
   43 00000000         ;BEQ DEFAULT
   44 00000000         ;CMP R0, #21
   45 00000000         ;BEQ CASE2
   46 00000000         ;CMP R0, #-21
   47 00000000         ;BEQ DEFAULT
   48 00000000         ;CMP R0, #22
   49 00000000         ;BEQ CASE3
   50 00000000         ;CMP R0, #-22
   51 00000000         ;BEQ CASE3L
   52 00000000         ;CMP R0, #23
   53 00000000         ;BEQ CASE3
   54 00000000         ;CMP R0, #-23
   55 00000000         ;BEQ CASE4L
   56 00000000         



ARM Macro Assembler    Page 2 


   57 00000000         ;CASE1
   58 00000000         ;ADD R5, R5, #(2_1 << 28)
   59 00000000         ;LSR R3, R5, #28
   60 00000000         ;B SwitchEnd
   61 00000000         
   62 00000000         
   63 00000000         ;CASE2
   64 00000000         ;SUB R5, R5, #(2_1 << 28)
   65 00000000         ;LSR R3, R5, #28
   66 00000000         ;B SwitchEnd
   67 00000000         
   68 00000000         
   69 00000000         ;CASE3
   70 00000000         ;LDR R7, [R12], #4     ;Pop stack counter from stack
   71 00000000         ;CMP R7, #2
   72 00000000         ;BGE OPERATE       ;Check if there is a number and an op
                       erator in the stack
   73 00000000         ;ADD R7, #2       ;Increment stack counter
   74 00000000         ;STR R5, [R12, #-4]!     ;Push R5 onto stack
   75 00000000         ;STR R0, [R12, #-4]!     ;Push operation onto stack
   76 00000000         ;LSR R3, R5, #28      ;Store for display
   77 00000000         ;STR R7, [R12, #-4]!     ;Store stack counter
   78 00000000         ;MOV R5, #0       ;Reset R5
   79 00000000         ;B SwitchEnd       ;Display Result
   80 00000000         
   81 00000000         
   82 00000000         ;CASE3L
   83 00000000         ;STMFD sp!, {R2}      ;Store previous values
   84 00000000         ;MOV R7, #0       ;Zero stack counter
   85 00000000         ;LDR R2, [R12], #4     ;Pop operator from stack
   86 00000000         ;LDR R5, [R12], #4     ;Pop num1 from stack
   87 00000000         ;STR R7, [R12, #-4]!     ;Store stack counter
   88 00000000         ;LSR R3, R5, #28      ;Store for display
   89 00000000         ;LDMFD sp!, {R2}      ;Restore to previous values
   90 00000000         ;B SwitchEnd       ;Display Result
   91 00000000         
   92 00000000         ;CASE4L
   93 00000000         ;STMFD sp!, {R2}      ;Store previous values
   94 00000000         ;MOV R7, #0       ;Zero stack counter
   95 00000000         ;LDR R2, [R12], #4     ;Pop operator from stack
   96 00000000         ;LDR R5, [R12], #4     ;Pop num1 from stack
   97 00000000         ;STR R7, [R12, #-4]!     ;Store stack counter
   98 00000000         ;MOV R3, #0       ;Zero display
   99 00000000         ;MOV R5, #0       ;Zero number storage
  100 00000000         ;LDMFD sp!, {R2}      ;Restore to previous values
  101 00000000         ;B SwitchEnd       ;Branch with Display 0
  102 00000000         
  103 00000000         
  104 00000000         ;DEFAULT
  105 00000000         ;;LDR R3, =2_1111
  106 00000000         ;B SwitchEnd
  107 00000000         
  108 00000000         
  109 00000000         ;OPERATE
  110 00000000         ;STMFD sp!, {R1,R2,R4}    ;Store previous values
  111 00000000         ;SUB R7, #1       ;Decrement stack counter
  112 00000000         ;LDR R4, [R12], #4     ;Pop operator from stack
  113 00000000         ;LDR R2, [R12], #4     ;Pop num1 from stack
  114 00000000         ;CMP R4, #22



ARM Macro Assembler    Page 3 


  115 00000000         ;ADDEQ R5, R2, R5     ;Add num1 & num2
  116 00000000         ;SUBNE R5, R2, R5     ;Subtract num1 & num2
  117 00000000         ;STR R5, [R12, #-4]!     ;Store output
  118 00000000         ;LSR R3, R5, #28      ;Store for display
  119 00000000         ;STR R7, [R12, #-4]!     ;Store stack counter
  120 00000000         ;MOV R5, #0       ;Reset R5
  121 00000000         ;LDMFD sp!, {R1,R2,R4}    ;Restore to previous values
  122 00000000         ;B SwitchEnd
  123 00000000         
  124 00000000         
  125 00000000         
  126 00000000         
  127 00000000         
  128 00000000         ;SwitchEnd
  129 00000000         
  130 00000000         ;Display to LEDs
  131 00000000         
  132 00000000 E3A0100B        MOV              R1, #2_1011
  133 00000004         
  134 00000004 EBFFFFFE        BL               Display
  135 00000008         
  136 00000008         ;TST R3, #2_1000
  137 00000008         ;ORRNE R2, #2_0001
  138 00000008         ;TST R3, #2_0100
  139 00000008         ;ORRNE R2, #2_0010
  140 00000008         ;TST R3, #2_0010
  141 00000008         ;ORRNE R2, #2_0100
  142 00000008         ;TST R3, #2_0001
  143 00000008         ;ORRNE R2, #2_1000
  144 00000008         ;LDR R1, =IO1SET
  145 00000008         ;LDR R4, =(2_1111 << 16)
  146 00000008         ;STR R4, [R1]
  147 00000008         ;LDR R1, =IO1CLR
  148 00000008         ;LSL R2, #16
  149 00000008         ;STR R2, [R1]
  150 00000008         
  151 00000008         
  152 00000008 EAFFFFFC        B                LPST
  153 0000000C         
  154 0000000C         
  155 0000000C                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
LPST 00000000

Symbol: LPST
   Definitions
      At line 33 in file App.s
   Uses
      At line 152 in file App.s
Comment: LPST used once
start 00000000

Symbol: start
   Definitions
      At line 14 in file App.s
   Uses
      At line 6 in file App.s
Comment: start used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display 00000000

Symbol: Display
   Definitions
      At line 11 in file App.s
   Uses
      At line 134 in file App.s
Comment: Display used once
IO1CLR 00000000

Symbol: IO1CLR
   Definitions
      At line 9 in file App.s
   Uses
      None
Comment: IO1CLR unused
IO1DIR 00000000

Symbol: IO1DIR
   Definitions
      At line 8 in file App.s
   Uses
      None
Comment: IO1DIR unused
IO1SET 00000000

Symbol: IO1SET
   Definitions
      At line 10 in file App.s
   Uses
      None
Comment: IO1SET unused
ReadKeyPress 00000000

Symbol: ReadKeyPress
   Definitions
      At line 7 in file App.s
   Uses
      None
Comment: ReadKeyPress unused
main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
6 symbols
342 symbols in table
